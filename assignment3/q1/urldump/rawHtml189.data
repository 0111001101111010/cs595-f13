<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  
    <title>Mailbox.app Javascript execution | Michele Spagnuolo's Blog</title>
    <meta name="keywords" content="michele spagnuolo, mikispag">
    <meta name="description" content="Mailbox.app executes Javascript in email bodies. Here is a demonstration of just something it can be done in iOS.">
    <meta name="author" content="Michele Spagnuolo"> 
    <link href="http://miki.it/blog/feed.atom" rel="alternate" title="Recent Blog Posts" type="application/atom+xml">
    <link rel="stylesheet" href="/blog/static/style.css" type="text/css">
    <link rel="icon" type="image/png" href="/favicon.png">
    <link rel="apple-touch-icon-precomposed" href="/favicon.png">
    <meta property="og:image" content="http://miki.it/images/og-image.png">
    <link rel="stylesheet" href="/blog/static/_pygments.css" type="text/css">
  
  </head>
  <body>
    <div class='container'>
      <header id='logo'>
        Michele Spagnuolo
      </header>
      <nav>
        <ul>
	  <li class='home'><a href="/">home</a>
          <li><a href="/blog">blog</a>
          <li><a href="/blog/archive/">archive</a>
          <li><a href="/blog/tags/">tags</a>
        </ul>
      </nav>
      <div class='body'>
      
<article>
  <header>
  <h1 class="title">Mailbox.app Javascript execution</h1>

  <script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
  <a href="http://news.ycombinator.com/submit" class="hn-share-button" data-title="Mailbox.app Javascript execution">Vote on HN</a>

  <script type="text/javascript" src="http://www.reddit.com/static/button/button3.js"></script><br>

  <div class="g-plusone"></div>

  <a href="#" 
    onclick="
      window.open(
        'https://www.facebook.com/sharer/sharer.php?u='+encodeURIComponent(location.href), 
        'facebook-share-dialog', 
        'width=626,height=436'); 
      return false;">
      <img src="/images/facebook.png" width="30" height="30" alt="Share on Facebook">
  </a><br>

    <a href="https://twitter.com/share" class="twitter-share-button" data-via="mikispag">Tweet</a>
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>

  
  <p class='date'>written on <time datetime="2013-09-24" pubdate>Tuesday, September 24, 2013</time></p>
  
  </header>
  <main>
  <p><a class="reference external" href="http://www.mailboxapp.com">Mailbox.app</a> is a free email management application for iOS that offers very cool features to achieve Inbox Zero.</p>
<div class="section" id="the-vulnerability">
<h2>The vulnerability</h2>
<p>Mailbox.app up to <strong>version 1.6.2</strong> (current version at date, Sept. 25 2013) <strong>executes any Javascript which is present in the body of HTML emails</strong>.</p>
<p>This is <strong>bad</strong> for security and privacy, because it allows advanced spam techniques, tracking of user actions, hijacking the user by just opening an email, and potentially much worse things, especially for jailbroken devices. The app also loads external images without offering an option to disable this behavior.</p>
<p>In this very short video I demonstrate some use cases of the Javascript execution vulnerability on iOS. Proof of concepts are intentionally innocuous, such as opening apps (Music, Photos, Videos...), Facebook profiles, tweeting and texting an arbitrary number (user confirmation needed). Even if the JS code runs in a sandboxed environment and it is short-lived, this is not a good thing.</p>
<p><strong>Update 2013-09-25 20:00 CEST:</strong> It has come to my knowledge that the problem has been previously <a class="reference external" href="https://twitter.com/bp_/status/339650116497588224">reported via Twitter</a> to Mailbox on May 30, 2013 by <a class="reference external" href="https://twitter.com/bp_">&#64;bp_</a> . So the original credit goes to him.</p>
<p><strong>Update 2013-09-25 20:11 CEST:</strong> About 90 minutes after Ars Technica published <a class="reference external" href="http://arstechnica.com/security/2013/09/popular-ios-e-mail-app-acquired-by-dropbox-has-serious-bug-researcher-warns/">this</a>, <em>Mailbox.app representatives acknowledged the bug but downplayed the severity of attacks that might exploit it. A spokeswoman said a patch would most likely be available before the end of Wednesday.</em></p>
<p><strong>Update 2013-09-26 09:00 CEST:</strong> Mailbox published <a class="reference external" href="http://www.mailboxapp.com/blog/?p=1#javascript-now-filtered-from-mailbox-messages">this statement</a> on their blog. They state:</p>
<blockquote>
<p>Today we implemented a process that strips javascript from messages before delivering them to mobile devices. This feature is now live on Mailbox servers and filtering new mail. This will be particularly important as we develop for other platforms, where javascript vulnerabilities could be more of an issue.</p>
<p>As always, thanks for joining us on the road to build the worldâ€™s best inbox.</p>
</blockquote>
<p>While I verified that they now strip some Javascript and no longer load external images, <span class="strike">I quickly found a way to bypass it, and Javascript is currently still executed without any user interaction. I will not publicly disclose details - I privately reported details to Mailbox.app and am waiting for a reply.</span> <strong>now fixed</strong>.</p>
<p><strong>Update 2013-09-26 10:20 CEST:</strong> I posted a <a class="reference external" href="http://arstechnica.com/security/2013/09/popular-ios-e-mail-app-acquired-by-dropbox-has-serious-bug-researcher-warns/?comments=1&amp;post=25369959#comment-25369959">comment on Ars Technica</a> expressing my opinion on the impact of this vulnerability.</p>
<p>Here is my comment:</p>
<blockquote>
<p>First of all I would like to thank Dan for the article, and the Ars community for such a great reaction. I really like this kind of informed and civilized discussions, and am considering to join the community for the near future.</p>
<p>In my original report, now updated, I didn't mean to sound &quot;sensational&quot; at all, and I personally do not think this article is &quot;sensational&quot; either.</p>
<p>I just highlighted that Mailbox.app blindly executes Javascript in HTML email bodies, and that this is bad, especially for jailbroken devices. I am perfectly aware of the fact vanilla iOS sandboxes applications, and that this limits the impact, but this should not excuse the design choice, which is poor from both a privacy and security point of view.</p>
<p>Mailbox.app has gained a considerable user base, and it was not acceptable that it used to load external images without asking the user for permission and, worse, execute Javascript code, which allows even more information leakage.</p>
<p>For unjailbroken devices, the sandboxing model, as everything where it comes to security, is not perfect. There is a history of sandbox bypass exploits. It is very likely that a vulnerability that allows malicious attackers to inject actual code using a Javascript vector inside an app to start the attack exists in current iOS versions and will be published in the future. After all, this has happened in the past. I am thinking of Pwn2Own 2010, where Vincenzo Iozzo and Weinmann exploited a vulnerability in MobileSafari to silently transmit the SMS database to a remote server, or the JailbreakMe &quot;Saffron&quot; exploit, that exploited a FreeType parsing vulnerability in the browser to read/write memory past buffer, bypass all restrictions in place in iOS and ultimately jailbreak the phone. In general, Javascript is used as a convenient tool for heap spraying attacks targeting the browser - I am not an iOS expert (my field is web application security), but I can't see why it should be allowed in a such untrusted channel as email.</p>
<p>Some commenters say that this is not different from a normal webview or Safari itself.
In my opinion, it is different because while users expect to execute Javascript on a webpage, they do not expect Javascript to be executed by simply opening emails, and emails can be spoofed. I'm also not aware of any other major mail app that runs sender-supplied JavaScript included in the body of emails.</p>
<p>Mailbox.app now claims to filter JS server-side before delivering mails to the client.
While I verified that they now strip some Javascript and no longer load external images, I quickly found a way to bypass it, and Javascript is currently still executed without any user interaction. I will not publicly disclose details - I privately reported details to Mailbox.app and am currently waiting for a reply.</p>
<p>Have a (slightly) safer day!</p>
</blockquote>
<p><strong>Update 2013-09-26 17:36 CEST:</strong> Mailbox support replied - they are working on a fix for my bypass.</p>
<p><strong>Update 2013-09-27 06:28 CEST:</strong> Mailbox support confirms the fix for the bypass.</p>
<blockquote>
<p>Thanks again for your email, Michele. We've updated the servers to also remove object tags.</p>
<p>We are continually evolving how Mailbox handles messages, and appreciate you passing on this information.</p>
</blockquote>
<iframe src="http://www.youtube.com/embed/mDOgBLYi8Q0" style="border: 0; height: 345px; width: 560px"></iframe><p>This has been featured on <a class="reference external" href="http://www.theguardian.com/technology/2013/sep/27/mailbox-javascript-security-off">The Guardian</a>, <a class="reference external" href="http://arstechnica.com/security/2013/09/popular-ios-e-mail-app-acquired-by-dropbox-has-serious-bug-researcher-warns/">Ars Technica</a>, <a class="reference external" href="http://gizmodo.com/mailbox-for-ios-has-a-huge-security-flaw-1385847324">Gizmodo</a>, <a class="reference external" href="http://www.macworld.com/article/2049389/security-flaw-allows-unwanted-code-execution-in-mailbox-app.html">Macworld</a>, <a class="reference external" href="http://lifehacker.com/mailbox-for-ios-has-been-found-to-have-a-major-security-1385265646">Lifehacker</a>, <a class="reference external" href="http://www.iclarified.com/34180/mailbox-app-allows-html-emails-to-execute-javascript-video">iClarified</a>, <a class="reference external" href="http://grahamcluley.com/2013/09/mailbox-iphone-app-javascript-flaw/">Graham Cluley</a>, <a class="reference external" href="http://threatpost.com/javascript-issue-plagues-mailbox-app-for-ios">Threatpost</a>, <a class="reference external" href="http://www.infosecurity-us.com/view/34731/vulnerability-javascript-allowed-to-run-in-the-mailbox-ios-app/">Info Security</a> and more.</p>
<p>This vulnerability report raised some debate in the security world about executing Javascript in emails. Nice insight in <a class="reference external" href="http://nakedsecurity.sophos.com/2013/09/26/mailbox-app-on-ipads-and-iphones-runs-javascript-from-emails-vulnerability-or-feature/">this Naked Security post</a>.</p>
</div>

  </main>
  
  <footer>
  <p class='tags'>Tags: 
    
      <a href="/blog/tags/javascript/">javascript</a>, 
      <a href="/blog/tags/mailbox.app/">mailbox.app</a> and 
      <a href="/blog/tags/proof%20of%20concept/">proof of concept</a>
  </footer>
  
</article>
  
  <section itemscope itemtype="http://schema.org/UserComments">
    
<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'mikispag'; // required: replace example with your forum shortname
    
    
    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>

  </section>
  
<script type="text/javascript">
    (function(d, t) {
        var g = d.createElement(t),
            s = d.getElementsByTagName(t)[0];
        g.src = '//hnbutton.appspot.com/static/hn.min.js';
        s.parentNode.insertBefore(g, s);
    }(document, 'script'));
</script>


      </div>
      <footer>
        <p>&copy; Copyright 2013 by <a href="/" rel="author me">Michele Spagnuolo</a>
      </footer>
    </div>

    <script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-1099808-8']);
	_gaq.push(['_trackPageview']);
	
	(function() {
	var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	ga.src = 'http://www.google-analytics.com/ga.js';
	var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
    </script>

  </body>
</html>
