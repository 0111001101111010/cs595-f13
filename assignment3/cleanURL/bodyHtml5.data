
&lt;html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;&lt;script type="text/javascript"&gt;var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-42924834-1']);_gaq.push(['_setDomainName','gitat.me']);_gaq.push(['_setAllowLinker',true]);_gaq.push(['_setSiteSpeedSampleRate',100]);&lt;/script&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;git at me - Discover great open source projects every week&lt;/title&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
&lt;meta name="description" content="git at me - discover great open source projects every week"&gt;
&lt;meta name="author" content="Neal Shyam"&gt;

&lt;link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css" rel="stylesheet"&gt;
&lt;link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet"&gt;
&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;link href="http://gitat.me/assets/A.gam.css+syntax.css,Mcc.QMTIDZI1KF.css.pagespeed.cf.609zsLvPm7.css" rel="stylesheet"/&gt;
&lt;script&gt;//&lt;/script&gt;
&lt;script src="//google-code-prettify.googlecode.com/svn/loader/run_prettify.js?skin=desert"&gt;&lt;/script&gt;



&lt;link rel="shortcut icon" type="image/png" href="/assets/favicon.png"&gt;
&lt;script src="//d3f5pyioow99x0.cloudfront.net/0.6.12/hull.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;Hull.init({appId:"524a2282e63c374832000006",orgUrl:"https://07dae677.hullapp.io"});&lt;/script&gt;
&lt;script type="text/javascript"&gt;var _gaq=_gaq||[];_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src='http://www.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();&lt;/script&gt;&lt;/head&gt;
&lt;body&gt;

&lt;div class="container head_cont"&gt;

&lt;div class="row"&gt;
&lt;div class="span8 offset2"&gt;
&lt;h3 class="visible-desktop headlink"&gt;<a href="/"><i></i> git -at me | discover great open source projects</a>&lt;/h3&gt;
&lt;h4 class="visible-tablet headlink"&gt;<a href="/"><i></i> git -at me | discover great open source projects</a>&lt;/h4&gt;
&lt;p class="visible-phone headlink"&gt;<a href="/"><strong><i></i> git -at me | discover great open source projects</strong></a>&lt;/p&gt;

&lt;form class="form-inline form_blk" action="http://gitat.us7.list-manage.com/subscribe/post?u=c077cf2dc30777ab6e605c7fc&amp;amp;id=e65eebd6a3" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate=""&gt;
&lt;label class="hidden-phone"&gt;Sign up for our weekly newsletter! &lt;/label&gt;
&lt;div class="input-append "&gt;
&lt;input type="email" value="" name="EMAIL" class="form-control" id="appendedInputButton" placeholder="enter email address"&gt;
&lt;button type="submit" name="subscribe" class="btn btn-primary "&gt;Subscribe&lt;/submit&gt;
&lt;/div&gt;
&lt;/form&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div class="container body_cont"&gt;
&lt;div class="span8 offset2"&gt;


&lt;div class="row "&gt;
&lt;div class="update_blk "&gt;
&lt;p&gt;<strong>Join the Discussion! <a href="#"><i></i></a></strong>&lt;/p&gt;
&lt;div class="togbox"&gt;
&lt;p&gt;Submit new topic ideas, start a conversation, and ask questions by creating a new <a href="https://github.com/nealrs/gitatme-comments/issues">issue</a> on GitHub. &lt;span class="muted"&gt;You can also use Disqus.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="row "&gt;
&lt;div class="blk "&gt;
&lt;p&gt;<strong>
09/26/2013 &lt;span class="muted"&gt;//&lt;/span&gt; <a href="/2013/09/26/Scrapin-Care-of-Business.html">Scrapin' Care of Business</a>
<a href="#"><i></i><i></i></a>
</strong>&lt;/p&gt;
&lt;div class="togbox"&gt;
&lt;p&gt;Before the proliferation of APIs and 'open data', scraping &amp; parsing HTML were state of the art technology for compiling data from the web. And although things have evolved quite a bit since then, it still comes in handy.&lt;/p&gt;
&lt;p&gt;Let's say you're Head of Strategy at ToothCo, an online toothbrush retailer, and your boss just asked you to research Amazon's 'dental care' vertical. You'll need a list of products, 'list' pricing, actual pricing, Amazon product ids, and UPCs.&lt;/p&gt;
&lt;p&gt;The good news is that Amazon's product pages expose all the information you need. The bad news is there are 22k toothbrush SKUs and (let's just pretend here) no open API. That is roof stoof.&lt;/p&gt;
&lt;p&gt;This calls for some big iron: <strong><a href="">BeautifulSoup</a></strong> is a Python library that parses HTML/XML. It has a number of useful methods to navigate and search through the DOM.&lt;/p&gt;
&lt;p&gt;View the source for some product pages, <strong><a href="http://www.amazon.com/Colgate-Extra-Medium-Toothbrush-4-Count/dp/B003U5Y2HO">(1)</a> <a href="http://www.amazon.com/Colgate-Classic-Soft-Full-Toothbrush/dp/B000053UOC">(2)</a> <a href="http://www.amazon.com/Vitality-Prowhite-Rechargeable-Electric-Toothbrush/dp/B003UKKH6O">(3)</a></strong>, and you'll see that the data is contained within uniquely defined elements.&lt;/p&gt;
&lt;pre class="prettyprint lang-html"&gt;
Product name
&lt;span id="btAsinTitle"&gt;Colgate Extra Clean Full Head, Medium Toothbrush, 4-Count (Pack of 3)&lt;/span&gt;

Original list price
&lt;span id="listPriceValue" class="listprice"&gt;$13.59&lt;/span&gt;

Amazon's price
&lt;b class="priceLarge"&gt;$11.01&lt;/b&gt;

ASIN
&lt;li&gt;&lt;b&gt;ASIN: &lt;/b&gt;B003U5Y2HO&lt;/li&gt;

UPC
&lt;li&gt;&lt;b&gt;UPC:&lt;/b&gt; 035000551900&lt;/li&gt;
&lt;/pre&gt;
&lt;p&gt;Translation? We can parse that!&lt;/p&gt;
&lt;pre class="prettyprint lang-python"&gt;
from StringIO import StringIO    
import pycurl
from bs4 import BeautifulSoup

url = ['http://www.amazon.com/Colgate-Extra-Medium-Toothbrush-4-Count/dp/B003U5Y2HO',
'http://www.amazon.com/Colgate-Classic-Soft-Full-Toothbrush/dp/B000053UOC',
'http://www.amazon.com/Vitality-Prowhite-Rechargeable-Electric-Toothbrush/dp/B003UKKH6O']

# Download html via cURL
for u in url:
  s = StringIO()
  c = pycurl.Curl()
  c.setopt(c.URL, u)
  c.setopt(c.WRITEFUNCTION, s.write)
  c.perform()
  c.close()
  h = s.getvalue()

  # Parse html with BeautifulSoup
  p = BeautifulSoup(h, "lxml")

  # Use element &amp; class name to find matching elements and extract the target value string
  name = p.find("span", id = "btAsinTitle").string
  aprice = p.find("b", class_ = "priceLarge").string

  # List price isn't always available
  if (p.find("span", class_ = "listprice")):
    oprice = p.find("span", class_ = "listprice").string
  else:
    oprice = "N/A"

  # Find matching "b" elements and select their siblings, which are the target value strings
  asin = p.find("b", text = "ASIN: ").next_sibling.string
  upc = p.find("b", text = "UPC:").next_sibling.string

  # Output
  print "Product name:",name
  print "Original price:",oprice
  print "Amazon's price:",aprice
  print "ASIN:",asin
  print "UPC:",upc,"\n"

# Final output (could also insert into database or export as json)
# Product name: Colgate Extra Clean Full Head, Medium Toothbrush, 4-Count (Pack of 3)
# Original price: $13.59
# Amazon's price: $11.01
# ASIN: B003U5Y2HO
# UPC:  035000551900

# Product name: Colgate Colgate Full Head Toothbrush Classic Soft
# Original price: $4.84
# Amazon's price: $0.52
# ASIN: B000053UOC
# UPC:  035000555007

# Product name: Oral-B Vitality Prowhite Rechargeable Electric Toothbrush 1 Count
# Original price: N/A
# Amazon's price: $26.21
# ASIN: B003UKKH6O
# UPC:  069055838464 069055862360
&lt;/pre&gt;
&lt;p&gt;20 minutes of coding can save you dozens of painful hours down the road, overcoming the limits of poor information design and closed/limited APIs. Add this to your toolbox - your wrists &amp; sanity will thank you!&lt;/p&gt;
&lt;p&gt;<strong>
<a href="http://www.crummy.com/software/BeautifulSoup/#Download"><i></i> Install</a> the package, read the
<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/"><i></i> Docs</a>, and join the
<a href="https://github.com/nealrs/gitatme-comments/issues/4"><i></i> Discussion</a>
</strong>&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row "&gt;
&lt;div class="blk "&gt;
&lt;p&gt;<strong>
09/19/2013 &lt;span class="muted"&gt;//&lt;/span&gt; <a href="/2013/09/19/Time-Keeps-on-Slippin.html">Time Keeps on Slippin'</a>
<a href="#"><i></i><i></i></a>
</strong>&lt;/p&gt;
&lt;div class="togbox"&gt;
&lt;p&gt;Time may be infinite - but your work week and development resources aren't.&lt;/p&gt;
&lt;p&gt;In short sprints, it's fairly easy to understand the impact of a one hour delay for a quick bugfix, or lost productivity due to a mid-week holiday. You don't need a full featured project management suite either - just fire up a console window. &lt;/p&gt;
&lt;p&gt;<strong><a href="https://github.com/bokmann/business_time">David Bock's Business Time</a></strong> Ruby gem is a handy tool for traversing the calendar and doing math in terms of business hours &amp; days. With a few short statements, you can forecast start &amp; end dates and predict how potential delays will affect dependent activities.&lt;/p&gt;
&lt;pre class="prettyprint lang-ruby"&gt;
require 'active_support'
require 'business_time'  
today = Time.parse("September 19th, 2013, 10:15 AM")    

# Jump forward two business days
2.business_day.after(today)   
# 2013-09-23 10:15:00 -0400 -- The following Monday    

# Jump back a few business hours 
5.business_hour.before(today)  
# 2013-09-18 13:15:00 -0400 -- The previous afternoon    

# Define a non-standard work schedule 
BusinessTime::Config.work_hours = {  
  :mon=&gt;["10:00","18:00"],  
  :tue=&gt;["10:00","20:00"],  
  :wed=&gt;["9:00","18:00"],  
  :thu=&gt;["10:00","19:00"],  
  :fri=&gt;["10:00","16:00"],  
}  
12.business_hour.after(today)  
# 2013-09-20 14:15:00 -0400
        
# Start from the current time with .from_now and .ago
1.business_hour.from_now  
10.business_days.ago
&lt;/pre&gt;
&lt;p&gt;Business Time can account for holidays, variable schedules, and way more. It's a great resource for building time aware and schedule driven applications.&lt;/p&gt;
&lt;p&gt;The only catch is that Business Time is only available in Ruby. Blerg. How will your PHP, Python, or Perl app make do without?&lt;/p&gt;
&lt;p&gt;To borrow a phrase from Patrick Bateman, <em>Don't just stare at it, port it!</em> This is an excellent opportunity to contribute to an open source project and cross-train your brain. Git started today!&lt;/p&gt;
&lt;p&gt;<strong>
<a href="https://github.com/bokmann/business_time/fork"><i></i> Fork</a> this
<a href="https://github.com/bokmann/business_time"><i></i> Project</a> and join the
<a href="https://github.com/nealrs/gitatme-comments/issues/3"><i></i> Discussion</a>
</strong>&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row "&gt;
&lt;div class="blk "&gt;
&lt;p&gt;<strong>
09/12/2013 &lt;span class="muted"&gt;//&lt;/span&gt; <a href="/2013/09/12/Lets-Talk-About-Sex.html">Let's Talk About Sex!</a>
<a href="#"><i></i><i></i></a>
</strong>&lt;/p&gt;
&lt;div class="togbox"&gt;
&lt;p&gt;Pop quiz hotshot! How many of the following git -at me subscribers (Taylor, Sacha, Jamie, and Brooklyn) are male? Would your answer change if they were British or Russian?&lt;/p&gt;
&lt;p&gt;With the increasing number of androgynous, curiously spelled, and region-specific names, gender is a touchy subject. Much like asking a woman when her baby is due, it's not a detail you want to guess at blindly. You're liable to walk away with a black eye.&lt;/p&gt;
&lt;p&gt;For most applications, gender is a nice data point to have, but it doesn't affect core functionality. Consequently, you may decide to eliminate it, reducing <strong><a href="https://medium.com/design-startups/3c390ea15d1">signup friction</a></strong> and concerns about <strong><a href="http://www.theguardian.com/world/2013/sep/05/nsa-gchq-encryption-codes-security">data security</a></strong>.&lt;/p&gt;
&lt;p&gt;And that's all well and good - until you get traction and want to monetize your user base. Targeted ads, data mining, selling anonymized data - whatever it is - gender suddenly becomes an important piece of the puzzle. So now what?&lt;/p&gt;
&lt;p&gt;Enter <a href="https://github.com/bmuller/sexmachine"><strong>Sex Machine</strong></a>. This Ruby gem from <a href="https://github.com/bmuller"><strong>Brian Muller</strong> </a>implements <a href="http://www.heise.de/ct/ftp/07/17/182/"><strong>Jörg Michael's Gender program</strong></a>, which uses a comprehensive regionalized dictionary to determine if a name is male, female, mostly male, mostly female, or too androgynous for a definitive conclusion.&lt;/p&gt;
&lt;pre class="prettyprint lang-ruby"&gt;
# Basic examples
require 'sexmachine'
d = SexMachine::Detector.new
d.get_gender("Neal") ## Male
d.get_gender("Sam") ## Mostly Male
d.get_gender("Eliane") ## Female

# Regional &amp; spelling variations
d.get_gender("Sasha") ## Mostly Male
d.get_gender("Sasha", :great_britain) ## Female
d.get_gender("Sacha") ## Mostly Female

d.get_gender("Cam") ## Mostly Male
d.get_gender("Cam", :great_britain) ## Mostly Female

# This one is just for fun
d.get_gender("Sterling") ## Male
d.get_gender("Mallory") ## Mostly Female
d.get_gender("Archer") ## Androgynous
&lt;/pre&gt;
&lt;p&gt;If your app already has access to first name and location, adding gender immediately transforms your app-specific data into a useful and salable dataset. That alone could be the difference between a $10M and $50M valuation.&lt;/p&gt;
&lt;p&gt;Want to contribute to this project or try it out for yourself? Install the gem right now and get to hacking: <em>gem install sexmachine</em>&lt;/p&gt;
&lt;p&gt;<strong>
<a href="https://github.com/bmuller/sexmachine/fork"><i></i> Fork</a> this
<a href="https://github.com/bmuller/sexmachine"><i></i> Project</a> and join the
<a href="https://github.com/nealrs/gitatme-comments/issues/2"><i></i> Discussion</a>
</strong>&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row "&gt;
&lt;div class="blk "&gt;
&lt;p&gt;<strong>
09/05/2013 &lt;span class="muted"&gt;//&lt;/span&gt; <a href="/2013/09/05/A-RegEx-Fairytale.html">A RegEx Fairytale</a>
<a href="#"><i></i><i></i></a>
</strong>&lt;/p&gt;
&lt;div class="togbox"&gt;
&lt;p&gt;Whether you're a novice or a seasoned developer, <strong><a href="http://en.wikipedia.org/wiki/Regular_expression">Regular Expressions</a></strong> are notoriously tricky. It's a bit like asking Rumpelstiltskin for help. Sure he can validate your form inputs - but you'll need to hand over your firstborn child and make him a sandwich too. Next time, try <strong><a href="https://github.com/VerbalExpressions/JSVerbalExpressions">VerbalExpressions.</a></strong>&lt;/p&gt;
&lt;p&gt;VerbalExpressions enables you to construct RegEx statements that you can actually understand. Think of it as SQL-level simplicity for Regular Expressions. For example, to validate a URL in javascript: &lt;/p&gt;
&lt;pre class="prettyprint lang-js"&gt;
# Normal RegEx gobbledy gook:
/^(http)(s)?(\:\/\/)(www\.)?([^\ ]*)$/

# VerbalExpressions statement:
VerEx().startOfLine().then( "http" ).maybe( "s" ).then( "://" ).maybe( "www." ).anythingBut( " " ).endOfLine()
&lt;/pre&gt;
&lt;p&gt;How cool is that? RegEx you can read! VerbalExpressions ports are available for Javascript, Ruby, PHP, and more. So what are you waiting for?&lt;/p&gt;
&lt;p&gt;<strong>
<a href="https://github.com/VerbalExpressions/JSVerbalExpressions/fork"><i></i> Fork</a> this
<a href="https://github.com/VerbalExpressions/JSVerbalExpressions"><i></i> Project</a> and join the
<a href="https://github.com/nealrs/gitatme-comments/issues/1"><i></i> Discussion</a>
</strong>&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="container"&gt;

&lt;div class="row "&gt;
&lt;span class="span8 offset2 text-center"&gt;
&lt;p&gt;
<a href="mailto:tips@gitat.me" title="tips@gitat.me"><i></i></a>      
<a href="http://twitter.com/git_atme" title="@git_atme"><i></i></a>      
<a href="http://feeds.feedburner.com/gitatme" title="RSS Feed"><i></i></a>      
<a href="https://github.com/nealrs/gitatme-comments/issues" title="Comments"><i></i></a>
&lt;/p&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;div class="row"&gt;
&lt;span class="span8 offset2 text-center"&gt;
&lt;p&gt;© 2013 <a href="http://nealshyam.com">Neal Shyam</a> &lt;span class="muted"&gt;::&lt;/span&gt; <a href="#about">About</a> &lt;span class="muted"&gt;::&lt;/span&gt; <a href="#terms">Terms &amp; Privacy</a>&lt;/p&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="about" class="modal hide fade" data-keyboard="true" tabindex="-1"&gt;
&lt;div class="modal-header"&gt;
&lt;button type="button" class="close" data-dismiss="modal" aria-hidden="true"&gt;×&lt;/button&gt;
&lt;h3&gt;Get At Who?&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="modal-body"&gt;
&lt;p&gt;<a href="https://plus.google.com/106729159255897575431?rel=author">Hi</a> there, I'm <a href="http://www.nealshyam.com">Neal Shyam</a> and I like to build stuff.&lt;/p&gt;
&lt;p&gt;I started git at -me because I like hacking on open source projects, and was having trouble discovering projects that could use my help &amp; interested me.&lt;/p&gt;
&lt;p&gt;Every Thursday, git at -me highlights one handpicked oss project. I'll tell you what it is and why I dig it. After that, it's up to you.&lt;/p&gt;
&lt;p&gt;Got a tip? Email <a href="mailto:tips@gitat.me">tips@gitat.me</a> or tweet <a href="http://twitter.com/git_atme">@git_atme</a>&lt;/p&gt;
&lt;/div&gt;
&lt;div class="modal-footer"&gt;

&lt;form class="form-inline" action="http://gitat.us7.list-manage.com/subscribe/post?u=c077cf2dc30777ab6e605c7fc&amp;amp;id=e65eebd6a3" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate=""&gt;
&lt;label class="hidden-phone"&gt;join our mailing list: &lt;/label&gt;
&lt;div class="input-append "&gt;
&lt;input type="email" value="" name="EMAIL" class="form-control" id="appendedInputButton" placeholder="enter email address"&gt;
&lt;button type="submit" name="subscribe" class="btn btn-inverse "&gt;Subscribe&lt;/submit&gt;
&lt;/div&gt;
 <a href="#">Close</a>
&lt;/form&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;div id="terms" class="modal hide fade" data-keyboard="true" tabindex="-1"&gt;
&lt;div class="modal-header"&gt;
&lt;button type="button" class="close" data-dismiss="modal" aria-hidden="true"&gt;×&lt;/button&gt;
&lt;h3&gt;Terms &amp; Privacy&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="modal-body"&gt;
&lt;p&gt;I promise not to be a dick or do the following:&lt;/p&gt;
<ul>
<li>Send you email that you didn't ask or signup for</li>
<li>Sell your personal information</li>
<li>Willfully allow a security breach</li>
<li>Punch animals</li>
</ul>
&lt;p&gt;By subscribing to git at -me's mailing list, you are opting in to a weekly newsletter. You may <a href="http://gitat.us7.list-manage.com/unsubscribe?u=c077cf2dc30777ab6e605c7fc&amp;id=e65eebd6a3">unsubscribe</a> at any time.&lt;/p&gt;
&lt;p&gt;Did I miss something? Email <a href="mailto:neal@gitat.me">me</a> and we'll address it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="modal-footer"&gt;

&lt;form class="form-inline" action="http://gitat.us7.list-manage.com/subscribe/post?u=c077cf2dc30777ab6e605c7fc&amp;amp;id=e65eebd6a3" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate=""&gt;
&lt;label class="hidden-phone"&gt;join our mailing list: &lt;/label&gt;
&lt;div class="input-append "&gt;
&lt;input type="email" value="" name="EMAIL" class="form-control" id="appendedInputButton" placeholder="enter email address"&gt;
&lt;button type="submit" name="subscribe" class="btn btn-inverse "&gt;Subscribe&lt;/submit&gt;
&lt;/div&gt;
 <a href="#">Close</a>
&lt;/form&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;$(".tip").tooltip({placement:"bottom"})&lt;/script&gt;
&lt;script&gt;$(".tip2").tooltip({placement:"right"})&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
